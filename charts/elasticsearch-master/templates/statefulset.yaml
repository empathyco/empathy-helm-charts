apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "master.fullname" . }}
  labels:
    {{- include "master.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "master.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "master.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "master.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "master.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          envFrom:
            - configMapRef:
                name: {{ include "master.fullname" . }}
          env:
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 9200
              protocol: TCP
            - name: transport
              containerPort: 9300
              protocol: TCP
          readinessProbe:
            failureThreshold: 10
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 3
            timeoutSeconds: 5
            exec:
              command:
              - sh
              - -c
              - |
                #!/usr/bin/env bash -e
                START_FILE=/tmp/.es_start_file
                http () {
                    local path="$1"
                    curl -XGET -s -k --fail http://127.0.0.1:9200${path}
                }
                if [ -f "${START_FILE}" ]; then
                    echo 'Elasticsearch is already running, lets check the node is healthy and there are master.nodes available'
                    http "/_cluster/health?timeout=0s"
                else
                    echo 'Waiting for elasticsearch cluster to become ready (request params: "wait_for_status=green&timeout=1s" )'
                    if http "/_cluster/health?wait_for_status=green&timeout=1s" ; then
                        touch ${START_FILE}
                        exit 0
                    else
                        echo 'Cluster is not yet ready (request params: "wait_for_status=green&timeout=1s" )'
                        exit 1
                    fi
                fi
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /usr/share/elasticsearch/master
              name: master
        {{ if .Values.prometheus.enabled }}      
        - command:
          - /bin/elasticsearch_exporter
          - --es.uri=http://127.0.0.1:9200
          image: {{ .Values.prometheus.exporter.image }}
          imagePullPolicy: IfNotPresent
          name: elastic-exporter
          ports:
          - containerPort: 9114
            name: metrics
          readinessProbe:
            httpGet:
              path: /metrics
              port: 9114
            initialDelaySeconds: 10
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 25m
              memory: 64Mi
          securityContext:
            capabilities:
              drop:
              - SETPCAP
              - MKNOD
              - AUDIT_WRITE
              - CHOWN
              - NET_RAW
              - DAC_OVERRIDE
              - FOWNER
              - FSETID
              - KILL
              - SETGID
              - SETUID
              - NET_BIND_SERVICE
              - SYS_CHROOT
              - SETFCAP
            readOnlyRootFilesystem: true

        {{- end }}
      initContainers:
        - command:
          - sh
          - -c
          - chown -R 1000:1000 /master
          image: {{ .Values.busybox.image }}
          imagePullPolicy: IfNotPresent
          name: fix-permissions
          securityContext:
            privileged: true
          volumeMounts:
          - mountPath: /master
            name: master

        - command:
          - sysctl
          - -w
          - vm.max_map_count=262144
          image: {{ .Values.busybox.image }}
          imagePullPolicy: IfNotPresent
          name: increase-vm-max-map
          securityContext:
            privileged: true
        - command:
          - sysctl
          - -w
          - vm.dirty_ratio=80
          image: {{ .Values.busybox.image }}
          imagePullPolicy: IfNotPresent
          name: increase-vm-dirty-ratio
          securityContext:
            privileged: true
        - command:
          - sysctl
          - -w
          - vm.dirty_background_ratio=5
          image: {{ .Values.busybox.image }}
          imagePullPolicy: IfNotPresent
          name: increase-vm-dirty-background-ratio
          securityContext:
            privileged: true
        - command:
          - sh
          - -c
          - ulimit -n 65536
          image: {{ .Values.busybox.image }}
          imagePullPolicy: IfNotPresent
          name: increase-fd-ulimit
          securityContext:
            privileged: true
        - command:
          - sh
          - -c
          - ulimit -l unlimited
          image: {{ .Values.busybox.image }}
          imagePullPolicy: IfNotPresent
          name: increase-fd-unlimited
          securityContext:
            privileged: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: "app.kubernetes.io/name"
                      operator: In
                      values:
                        - {{ include "master.fullname" . }}
                topologyKey: kubernetes.io/hostname
              weight: 100
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        {{- with .Values.volume.annotations }}
        annotations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        labels:
        {{- include "master.labels" . | nindent 10 }}
        name: master
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.volume.storage }}
        storageClassName: {{ .Values.volume.storage_class }}
