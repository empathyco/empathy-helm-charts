global:
  elastic_config:
    # -- Elasticsearch cluster.name and should be unique per cluster in the namespace. Note that it should be the same as elasticsearch-data.elastic_config."cluster.name" so both subcharts belong to the same cluster.
    cluster.name: es
  # -- Fullname of the master, necessary to connect
  masterFullname: es-master

master:
  # -- Enabling or disabling master nodes
  enabled: true
  # -- This property indicates its the master
  isMaster: true
  # -- Kubernetes replica count for the Statefulset (i.e. how many pods)
  replicaCount: 3

  image:
    # -- Docker repository for Elasticsearch image
    repository: "empathyco/elasticsearch"
    # -- The Kubernetes imagePullPolicy value
    pullPolicy: IfNotPresent
    # -- Overrides the image tag whose default is the chart appVersion.
    tag: "7.17.2-memlock"

  # -- Configuration for imagePullSecrets so that you can use a private registry for your image
  imagePullSecrets: []
  # -- Overrides the clusterName when used in the naming of resources
  nameOverride: ""
  # -- Overrides the clusterName and nodeGroup when used in the naming of resources. This should only be used when using a single nodeGroup, otherwise you will have name conflicts
  fullnameOverride: ""

  busybox:
    # -- Image for busybox initContainers (sysctlInitContainer in official Elasticsearch Helm chart)
    image: busybox:1.31
  
  volume:
    # -- Annotations for statefulSet volumes
    annotations: {}
    #placement_strategy: es-search-volume-placement

    # -- Storage resources for statefulSet volumes
    storage: 5Gi
    # -- Storage class for statefulSet volumes
    storage_class: standard

  # -- Elasticsearch configuration added in a configMap and passed to the Elasticsearch pods as Env. Vars.
  elastic_config:
    # -- Minimum number of master eligible nodes that need to join a newly elected master in order for an election to complete and for the elected node to accept its mastership.
    discovery.zen.minimum_master_nodes: "1"
    # -- Elasticsearch network.bind_host, network address(es) to which the node should bind in order to listen for incoming connections.
    network.bind_host: "0.0.0.0"
    # -- Elasticsearch master node role
    node.master: "true"
    # -- Elasticsearch ingest node role
    node.ingest: "false"
    # -- Elasticsearch data node role
    node.data: "false"
    # -- Elasticsearch ml node role
    node.ml: "false"
    # -- Elasticsearch JVM options
    #ES_JAVA_OPTS: "-Xms2048m -Xmx2048m"
    # -- Elasticsearch enable compression between nodes
    transport.tcp.compress: "true"
    # -- Elasticsearch enable memory lock to avoid swapping
    bootstrap.memory_lock: "true"

  serviceAccount:
    # -- Specifies whether a service account should be created
    create: true
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  prometheus:
    # -- Deploy a ServiceMonitor for Prometheus scrapping
    enabled: false
    # -- Deploy a Grafana Dashboard
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
    dashboard:
      enabled: true
      namespace: monitoring
    # -- Annotations to include in the ServiceMonitor
    annotations: 
      release: prometheus
      app: prometheus-operator
    exporter:
    # -- Exporter image to deploy as a sidecar container
      image: prometheuscommunity/elasticsearch-exporter:v1.3.0

  # -- The default is to deploy all pods serially. By setting this to "Parallel" all pods are started at
  # the same time when bootstrapping the cluster
  podManagementPolicy: "Parallel"

  # -- Configurable annotations applied to all Elasticsearch pods
  podAnnotations: {}

  # -- Allows you to set the securityContext for the pod
  podSecurityContext: {}
    # fsGroup: 2000

  # -- Allows you to set the securityContext for the container
  securityContext:
    capabilities:
      add:
      - IPC_LOCK
      - SYS_RESOURCE

  service:
    # -- Kubernetes service type
    type: ClusterIP
    # -- Kubernetes service port, used by Ingress to expose Elasticsearch pods
    port: 9200

  ingress:
    # -- Enable Kubernetes Ingress to expose Elasticsearch pods
    enabled: false
    # -- IngressClass name for ingress exposition
    className: ""
    # -- Annotations for Kubernetes Ingress
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"

    # -- Host and path for Kubernetes Ingress. See values.yaml for an example
    hosts: []
    # - host: chart-example.local
    #   paths:
    #     - path: /
    #       pathType: ImplementationSpecific
    
    # -- TLS secret for exposing Elasticsearch with https. See values.yaml for an example
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    requests:
      # -- CPU requests for the Deployment
      cpu: 1000m
      # -- Memory requests for the Deployment
      memory: 3Gi

  # -- Configurable nodeSelector so that you can target specific nodes for your Elasticsearch cluster
  nodeSelector: {}
  #example/node-type: es-master

  # -- Configurable tolerations
  tolerations: []
  #   - effect: NoExecute
  #     key: example/node-type
  #     operator: Equal
  #     value: es-master

  rbac:
    # -- Whether RBAC rules should be created (Role and Rolebinding)
    create: false

  podSecurityPolicy:
    # -- Create a podSecurityPolicy with minimal permissions to run this Helm chart. Be sure to also set rbac.create to true, otherwise Role and RoleBinding won't be created.
    create: false
    # -- The name of the podSecurityPolicy to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
    # -- Spec to apply to the podSecurityPolicy. See values.yaml for an example
    spec: {}
      # privileged: true
      # fsGroup:
      #  rule: RunAsAny
      # allowedCapabilities:
      #  - NET_BIND_SERVICE
      #  - IPC_LOCK
      #  - SYS_RESOURCE
      # runAsUser:
      #  rule: RunAsAny
      # seLinux:
      #  rule: RunAsAny
      # supplementalGroups:
      #  rule: RunAsAny
      # volumes:
      #  - secret
      #  - configMap
      #  - persistentVolumeClaim
      #  - emptyDir

  affinityOverride: {}

data:
  # -- Enabling or disabling data nodes
  enabled: true
  # -- This property indicates its the master
  isMaster: false
  # -- Kubernetes replica count for the StatefulSet (i.e. how many pods)
  replicaCount: 3

  image:
    # -- Docker repository for Elasticsearch image
    repository: "empathyco/elasticsearch"
    # -- The Kubernetes imagePullPolicy value
    pullPolicy: IfNotPresent
    # -- Overrides the image tag whose default is the chart appVersion.
    tag: "7.17.2-memlock"
    
  # -- Configuration for imagePullSecrets so that you can use a private registry for your image
  imagePullSecrets: []
  # -- Overrides the clusterName when used in the naming of resources
  nameOverride: ""
  # -- Overrides the clusterName and nodeGroup when used in the naming of resources. This should only be used when using a single nodeGroup, otherwise you will have name conflicts
  fullnameOverride: ""

  busybox:
    # -- Image for busybox initContainers (sysctlInitContainer in official Elasticsearch Helm chart)
    image: busybox:1.31

  volume:
    # -- Annotations for statefulSet volumes
    annotations: {}
    #placement_strategy: es-search-volume-placement
    
    # -- Storage resources for statefulSet volumes
    storage: 200Gi
    # -- Storage class for statefulSet volumes
    storage_class: standard

  # -- Elasticsearch configuration added in a configMap and passed to the Elasticsearch pods as Env. Vars.
  elastic_config:
    # -- Elasticsearch network.bind_host, network address(es) to which the node should bind in order to listen for incoming connections.
    network.bind_host: "0.0.0.0"
    # -- Elasticsearch master node role
    node.master: "false"
    # -- Elasticsearch ingest node role
    node.ingest: "true"
    # -- Elasticsearch data node role
    node.data: "true"
    # -- Elasticsearch ml node role
    node.ml: "false"
    # -- Elasticsearch JVM options
    #ES_JAVA_OPTS: "-Xms2048m -Xmx2048m"
    # -- Elasticsearch enable compression between nodes
    transport.tcp.compress: "true"
    # -- Elasticsearch enable memory lock to avoid swapping
    bootstrap.memory_lock: "true"
    # -- Elasticsearch node attribute type
    node.attr.type: search
    # -- Elasticsearch GCE discovery log level
    logger.org.elasticsearch.discovery.gce: TRACE

  serviceAccount:
    # -- Specifies whether a service account should be created
    create: true
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  prometheus:
    # -- Deploy a ServiceMonitor for Prometheus scrapping
    enabled: false
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
    # -- Annotations to include in the ServiceMonitor
    annotations: 
      release: prometheus
      app: prometheus-operator
    exporter:
    # -- Exporter image to deploy as a sidecar container
      image: prometheuscommunity/elasticsearch-exporter:v1.3.0

  # -- Configurable annotations applied to all Elasticsearch pods
  podAnnotations: {}

  # -- Allows you to set the securityContext for the pod
  podSecurityContext: {}
    # fsGroup: 2000

  # -- Allows you to set the securityContext for the container
  securityContext:
    capabilities:
      add:
      - IPC_LOCK
      - SYS_RESOURCE

  service:
    # -- Kubernetes service type
    type: ClusterIP
    # -- Kubernetes service port, used by Ingress to expose Elasticsearch pods
    port: 9200

  ingress:
    # -- Enable Kubernetes Ingress to expose Elasticsearch pods
    enabled: false
    # -- IngressClass name for ingress exposition
    className: ""
    # -- Annotations for Kubernetes Ingress
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    
    # -- Host and path for Kubernetes Ingress. See values.yaml for an example
    hosts: []
    # - host: chart-example.local
    #   paths:
    #     - path: /
    #       pathType: ImplementationSpecific
    
    # -- TLS secret for exposing Elasticsearch with https. See values.yaml for an example
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    requests:
      # -- CPU requests for the StatefulSet
      cpu: 1000m
      # -- Memory requests for the StatefulSet
      memory: 3Gi

  # -- Configurable nodeSelector so that you can target specific nodes for your Elasticsearch cluster
  nodeSelector: {}
  #example/node-type: es-master

  # -- Configurable tolerations
  tolerations: []
  #   - effect: NoExecute
  #     key: example/node-type
  #     operator: Equal
  #     value: es-master

  rbac:
    # -- Whether RBAC rules should be created (Role and Rolebinding)
    create: false

  podSecurityPolicy:
    # -- Create a podSecurityPolicy with minimal permissions to run this Helm chart. Be sure to also set rbac.create to true, otherwise Role and RoleBinding won't be created.
    create: false
    # -- The name of the podSecurityPolicy to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
    # -- Spec to apply to the podSecurityPolicy. See values.yaml for an example
    spec: {}
      # privileged: true
      # fsGroup:
      #  rule: RunAsAny
      # allowedCapabilities:
      #  - NET_BIND_SERVICE
      #  - IPC_LOCK
      #  - SYS_RESOURCE
      # runAsUser:
      #  rule: RunAsAny
      # seLinux:
      #  rule: RunAsAny
      # supplementalGroups:
      #  rule: RunAsAny
      # volumes:
      #  - secret
      #  - configMap
      #  - persistentVolumeClaim
      #  - emptyDir

  affinityOverride: {}

index:
  # -- Enabling or disabling index nodes
  enabled: true
  # -- This property indicates its the master
  isMaster: false
  # -- Kubernetes replica count for the StatefulSet (i.e. how many pods)
  replicaCount: 1

  image:
    # -- Docker repository for Elasticsearch image
    repository: "empathyco/elasticsearch"
    # -- The Kubernetes imagePullPolicy value
    pullPolicy: IfNotPresent
    # -- Overrides the image tag whose default is the chart appVersion.
    tag: "7.17.2-memlock"
    
  # -- Configuration for imagePullSecrets so that you can use a private registry for your image
  imagePullSecrets: []
  # -- Overrides the clusterName when used in the naming of resources
  nameOverride: ""
  # -- Overrides the clusterName and nodeGroup when used in the naming of resources. This should only be used when using a single nodeGroup, otherwise you will have name conflicts
  fullnameOverride: ""

  busybox:
    # -- Image for busybox initContainers (sysctlInitContainer in official Elasticsearch Helm chart)
    image: busybox:1.31

  volume:
    # -- Annotations for statefulSet volumes
    annotations: {}
    #placement_strategy: es-search-volume-placement
    
    # -- Storage resources for statefulSet volumes
    storage: 200Gi
    # -- Storage class for statefulSet volumes
    storage_class: standard

  # -- Elasticsearch configuration added in a configMap and passed to the Elasticsearch pods as Env. Vars.
  elastic_config:
    # -- Elasticsearch network.bind_host, network address(es) to which the node should bind in order to listen for incoming connections.
    network.bind_host: "0.0.0.0"
    # -- Elasticsearch master node role
    node.master: "false"
    # -- Elasticsearch ingest node role
    node.ingest: "true"
    # -- Elasticsearch data node role
    node.data: "true"
    # -- Elasticsearch ml node role
    node.ml: "false"
    # -- Elasticsearch JVM options
    #ES_JAVA_OPTS: "-Xms2048m -Xmx2048m"
    # -- Elasticsearch enable compression between nodes
    transport.tcp.compress: "true"
    # -- Elasticsearch enable memory lock to avoid swapping
    bootstrap.memory_lock: "true"
    # -- Elasticsearch node attribute type
    node.attr.type: index
    # -- Elasticsearch GCE discovery log level
    logger.org.elasticsearch.discovery.gce: TRACE

  serviceAccount:
    # -- Specifies whether a service account should be created
    create: true
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  prometheus:
    # -- Deploy a ServiceMonitor for Prometheus scrapping
    enabled: false
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
    # -- Annotations to include in the ServiceMonitor
    annotations: 
      release: prometheus
      app: prometheus-operator
    exporter:
    # -- Exporter image to deploy as a sidecar container
      image: prometheuscommunity/elasticsearch-exporter:v1.3.0

  # -- Configurable annotations applied to all Elasticsearch pods
  podAnnotations: {}

  # -- Allows you to set the securityContext for the pod
  podSecurityContext: {}
    # fsGroup: 2000

  # -- Allows you to set the securityContext for the container
  securityContext:
    capabilities:
      add:
      - IPC_LOCK
      - SYS_RESOURCE

  service:
    # -- Kubernetes service type
    type: ClusterIP
    # -- Kubernetes service port, used by Ingress to expose Elasticsearch pods
    port: 9200

  ingress:
    # -- Enable Kubernetes Ingress to expose Elasticsearch pods
    enabled: false
    # -- IngressClass name for ingress exposition
    className: ""
    # -- Annotations for Kubernetes Ingress
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    
    # -- Host and path for Kubernetes Ingress. See values.yaml for an example
    hosts: []
    # - host: chart-example.local
    #   paths:
    #     - path: /
    #       pathType: ImplementationSpecific
    
    # -- TLS secret for exposing Elasticsearch with https. See values.yaml for an example
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    requests:
      # -- CPU requests for the StatefulSet
      cpu: 1000m
      # -- Memory requests for the StatefulSet
      memory: 3Gi

  # -- Configurable nodeSelector so that you can target specific nodes for your Elasticsearch cluster
  nodeSelector: {}
  #example/node-type: es-master

  # -- Configurable tolerations
  tolerations: []
  #   - effect: NoExecute
  #     key: example/node-type
  #     operator: Equal
  #     value: es-master

  rbac:
    # -- Whether RBAC rules should be created (Role and Rolebinding)
    create: false

  podSecurityPolicy:
    # -- Create a podSecurityPolicy with minimal permissions to run this Helm chart. Be sure to also set rbac.create to true, otherwise Role and RoleBinding won't be created.
    create: false
    # -- The name of the podSecurityPolicy to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
    # -- Spec to apply to the podSecurityPolicy. See values.yaml for an example
    spec: {}
      # privileged: true
      # fsGroup:
      #  rule: RunAsAny
      # allowedCapabilities:
      #  - NET_BIND_SERVICE
      #  - IPC_LOCK
      #  - SYS_RESOURCE
      # runAsUser:
      #  rule: RunAsAny
      # seLinux:
      #  rule: RunAsAny
      # supplementalGroups:
      #  rule: RunAsAny
      # volumes:
      #  - secret
      #  - configMap
      #  - persistentVolumeClaim
      #  - emptyDir

  affinityOverride: {}

client:
  # -- Enabling or disabling client nodes
  enabled: true
  # -- Kubernetes replica count for the Deployment (i.e. how many pods)
  replicaCount: 3

  image:
    # -- Docker repository for Elasticsearch image
    repository: "empathyco/elasticsearch"
    # -- The Kubernetes imagePullPolicy value
    pullPolicy: IfNotPresent
    # -- Overrides the image tag whose default is the chart appVersion.
    tag: "7.17.2-memlock"
    
  # -- Configuration for imagePullSecrets so that you can use a private registry for your image
  imagePullSecrets: []
  # -- Overrides the clusterName when used in the naming of resources
  nameOverride: ""
  # -- Overrides the clusterName and nodeGroup when used in the naming of resources. This should only be used when using a single nodeGroup, otherwise you will have name conflicts
  fullnameOverride: ""

  busybox:
    # -- Image for busybox initContainers (sysctlInitContainer in official Elasticsearch Helm chart)
    image: busybox:1.31

  # -- Elasticsearch configuration added in a configMap and passed to the Elasticsearch pods as Env. Vars.
  elastic_config:
    # -- Elasticsearch network.bind_host, network address(es) to which the node should bind in order to listen for incoming connections.
    network.bind_host: "0.0.0.0"
    # -- Elasticsearch master node role
    node.master: "false"
    # -- Elasticsearch data node role
    node.data: "false"
    # -- Elasticsearch ml node role
    node.ml: "false"
    # -- Elasticsearch JVM options
    #ES_JAVA_OPTS: "-Xms2048m -Xmx2048m"
    # -- Elasticsearch enable compression between nodes
    transport.tcp.compress: "true"
    # -- Elasticsearch enable memory lock to avoid swapping
    bootstrap.memory_lock: "true"
    # -- Elasticsearch GCE discovery log level
    logger.org.elasticsearch.discovery.gce: TRACE

  serviceAccount:
    # -- Specifies whether a service account should be created
    create: true
    # -- Annotations to add to the service account
    annotations: {}
    # -- The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  prometheus:
    # -- Deploy a ServiceMonitor for Prometheus scrapping
    enabled: false
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
    # -- Annotations to include in the ServiceMonitor
    annotations: 
      release: prometheus
      app: prometheus-operator
    exporter:
    # -- Exporter image to deploy as a sidecar container
      image: prometheuscommunity/elasticsearch-exporter:v1.3.0

  # -- Configurable annotations applied to all Elasticsearch pods
  podAnnotations: {}

  # -- Allows you to set the securityContext for the pod
  podSecurityContext: {}
    # fsGroup: 2000

  # -- Allows you to set the securityContext for the container
  securityContext:
    capabilities:
      add:
      - IPC_LOCK
      - SYS_RESOURCE

  service:
    # -- Kubernetes service type
    type: ClusterIP
    # -- Kubernetes service port, used by Ingress to expose Elasticsearch pods
    port: 9200

  ingress:
    # -- Enable Kubernetes Ingress to expose Elasticsearch pods
    enabled: false
    # -- IngressClass name for ingress exposition
    className: ""
    # -- Annotations for Kubernetes Ingress
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    
    # -- Host and path for Kubernetes Ingress. See values.yaml for an example
    hosts: []
    # - host: chart-example.local
    #   paths:
    #     - path: /
    #       pathType: ImplementationSpecific
    
    # -- TLS secret for exposing Elasticsearch with https. See values.yaml for an example
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    requests:
      # -- CPU requests for the StatefulSet
      cpu: 1000m
      # -- Memory requests for the StatefulSet
      memory: 3Gi

  # -- Configurable nodeSelector so that you can target specific nodes for your Elasticsearch cluster
  nodeSelector: {}
  #example/node-type: es-master

  # -- Configurable tolerations
  tolerations: []
  #   - effect: NoExecute
  #     key: example/node-type
  #     operator: Equal
  #     value: es-master

  rbac:
    # -- Whether RBAC rules should be created (Role and Rolebinding)
    create: false

  podSecurityPolicy:
    # -- Create a podSecurityPolicy with minimal permissions to run this Helm chart. Be sure to also set rbac.create to true, otherwise Role and RoleBinding won't be created.
    create: false
    # -- The name of the podSecurityPolicy to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
    # -- Spec to apply to the podSecurityPolicy. See values.yaml for an example
    spec: {}
      # privileged: true
      # fsGroup:
      #  rule: RunAsAny
      # allowedCapabilities:
      #  - NET_BIND_SERVICE
      #  - IPC_LOCK
      #  - SYS_RESOURCE
      # runAsUser:
      #  rule: RunAsAny
      # seLinux:
      #  rule: RunAsAny
      # supplementalGroups:
      #  rule: RunAsAny
      # volumes:
      #  - secret
      #  - configMap
      #  - persistentVolumeClaim
      #  - emptyDir

  affinityOverride: {}
