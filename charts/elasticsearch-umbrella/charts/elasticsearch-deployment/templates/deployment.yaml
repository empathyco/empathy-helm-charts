{{- if .Values.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "deployment.fullname" . }}
  labels:
    {{- include "deployment.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "deployment.selectorLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "deployment.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "deployment.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          envFrom:
            - configMapRef:
                name: {{ include "deployment.fullname" . }}
          env:
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 9200
              protocol: TCP
            - name: transport
              containerPort: 9300
              protocol: TCP
          readinessProbe:
            failureThreshold: 10
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 3
            timeoutSeconds: 5
            exec:
              command:
              - sh
              - -c
              - |
                #!/usr/bin/env bash -e
                START_FILE=/tmp/.es_start_file
                http () {
                    local path="$1"
                    curl -XGET -s -k --fail http://127.0.0.1:9200${path}
                }
                if [ -f "${START_FILE}" ]; then
                    echo 'Elasticsearch is already running, lets check the node is healthy and there are master nodes available'
                    http "/_cluster/health?timeout=0s"
                else
                    echo 'Waiting for elasticsearch cluster to become ready (request params: "wait_for_status=green&timeout=1s" )'
                    if http "/_cluster/health?wait_for_status=green&timeout=1s" ; then
                        touch ${START_FILE}
                        exit 0
                    else
                        echo 'Cluster is not yet ready (request params: "wait_for_status=green&timeout=1s" )'
                        exit 1
                    fi
                fi
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /data
              name: storage
            {{- with .Values.extraVolumeMounts }}
              {{- toYaml . | nindent 12 }}
            {{- end }}


        {{ if .Values.prometheus.enabled }}
        
        - command:
          - /bin/elasticsearch_exporter
          - --es.uri=http://127.0.0.1:9200
          image: {{ .Values.prometheus.exporter.image }}
          imagePullPolicy: IfNotPresent
          name: elastic-exporter
          ports:
          - containerPort: 9114
            name: metrics
          readinessProbe:
            httpGet:
              path: /metrics
              port: 9114
            initialDelaySeconds: 10
            timeoutSeconds: 10
          resources:
            {{- toYaml .Values.prometheus.resources | nindent 12 }}
          securityContext:
            capabilities:
              drop:
              - SETPCAP
              - MKNOD
              - AUDIT_WRITE
              - CHOWN
              - NET_RAW
              - DAC_OVERRIDE
              - FOWNER
              - FSETID
              - KILL
              - SETGID
              - SETUID
              - NET_BIND_SERVICE
              - SYS_CHROOT
              - SETFCAP
            readOnlyRootFilesystem: true

        {{- end }}
      initContainers:
        - command:
          - sysctl
          - -w
          - vm.max_map_count=262144
          image: {{ .Values.busybox.image }}
          imagePullPolicy: IfNotPresent
          name: increase-vm-max-map
          securityContext:
            privileged: true
        - command:
          - sysctl
          - -w
          - vm.dirty_ratio=80
          image: {{ .Values.busybox.image }}
          imagePullPolicy: IfNotPresent
          name: increase-vm-dirty-ratio
          securityContext:
            privileged: true
        - command:
          - sysctl
          - -w
          - vm.dirty_background_ratio=5
          image: {{ .Values.busybox.image }}
          imagePullPolicy: IfNotPresent
          name: increase-vm-dirty-background-ratio
          securityContext:
            privileged: true
        - command:
          - sh
          - -c
          - ulimit -n 65536
          image: {{ .Values.busybox.image }}
          imagePullPolicy: IfNotPresent
          name: increase-fd-ulimit
          securityContext:
            privileged: true
        - command:
          - sh
          - -c
          - ulimit -l unlimited
          image: {{ .Values.busybox.image }}
          imagePullPolicy: IfNotPresent
          name: increase-fd-unlimited
          securityContext:
            privileged: true
        {{- with .Values.extraInitContainers }}
          {{- toYaml . | nindent 8 }}
        {{- end }}

      volumes:
      - emptyDir:
          medium: ""
        name: storage
      {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 6 }}
      {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or (eq .Values.antiAffinity "hard") (eq .Values.antiAffinity "soft") .Values.nodeAffinity }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      affinity:
      {{- end }}
      {{- if .Values.affinityOverride }}
        {{- toYaml .Values.affinityOverride | nindent 8 }}
      {{- else }}
      {{- if eq .Values.antiAffinity "hard" }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: "app.kubernetes.io/name"
                operator: In
                values:
                - {{ include "deployment.fullname" . }}
            topologyKey: {{ .Values.antiAffinityTopologyKey }}
      {{- else if eq .Values.antiAffinity "soft" }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: {{ .Values.antiAffinityWeight |default 1 }}
            podAffinityTerm:
              topologyKey: {{ .Values.antiAffinityTopologyKey }}
              labelSelector:
                matchExpressions:
                - key: "app.kubernetes.io/name"
                  operator: In
                  values:
                  - {{ include "deployment.fullname" . }}
      {{- end }}
      {{- end }}
      {{- with .Values.nodeAffinity }}
        nodeAffinity:
{{ toYaml . | indent 10 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
