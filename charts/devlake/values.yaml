# Default values for devlake.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

devlake:
  image:
    repository: mericodev/lake
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "20220523"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  replicaCount: 1

  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  dotEnvFile:
    GITHUB_PROXY:
    NOTIFICATION_SECRET:
    AE_APP_ID:
    AE_RATE_LIMIT: 100
    MODE: release
    TEMPORAL_URL:
    GITHUB_ENDPOINT: https://api.github.com/        
    LOGGING_LEVEL:
    GITLAB_ENDPOINT: https://gitlab.com/api/v4/
    GITHUB_ISSUE_PRIORITY: ^(highest|high|medium|low)$
    GITHUB_ISSUE_TYPE_INCIDENT:
    JENKINS_USERNAME:
    GITLAB_API_REQUESTS_PER_HOUR:
    AE_PROXY:
    PORT: :8080
    AE_SECRET_KEY:
    GITLAB_AUTH:
    API_TIMEOUT: 10s
    FEISHU_APPSCRECT:
    API_RETRY: 3
    JIRA_BOARD_GITLAB_PROJECTS:
    GITHUB_ISSUE_COMPONENT: component/(.*)$
    GITHUB_ISSUE_TYPE_BUG: ^(bug|failure|error)$
    GITHUB_PR_BODY_CLOSE_PATTERN: '''(?mi)(fix|close|resolve|fixes|closes|resolves|fixed|closed|resolved)[\s]*.*(((and )?(#|https:\/\/github.com\/%s\/%s\/issues\/)\d+[ ]*)+)'''
    GITLAB_PROXY:
    TEMPORAL_TASK_QUEUE:
    NOTIFICATION_ENDPOINT:
    DB_URL: mysql://merico:merico@mysql:3306/lake?charset=utf8mb4&parseTime=True
    GITHUB_API_REQUESTS_PER_HOUR:
    GITHUB_PR_TYPE: type/(.*)$
    FEISHU_APPID:
    JENKINS_PROXY:
    JENKINS_API_REQUESTS_PER_HOUR:
    PLUGIN_DIR: bin/plugins
    AE_ENDPOINT:
    API_REQUESTS_PER_HOUR: 10000
    GITHUB_ISSUE_TYPE_REQUIREMENT: ^(feat|feature|proposal|requirement)$
    DB_LOGGING_LEVEL: Error
    GITHUB_PR_TITLE_PATTERN: .*\(#(\d+)\)
    COMPOSE_PROFILES: user
    JENKINS_ENDPOINT:
    FEISHU_ENDPOINT: https://open.feishu.cn/open-apis/vc/v1/
    GITHUB_PR_COMPONENT: component/(.*)$
    GITHUB_ISSUE_SEVERITY: severity/(.*)$
    ASYNC_CF: true

  dotEnvFileSecretName: 




configui:
  image:
    repository: mericodev/config-ui
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "20220523"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  replicaCount: 1


  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: true
    className: ""
    annotations: {}
      #nginx.ingress.kubernetes.io/auth-signin: 
      #nginx.ingress.kubernetes.io/auth-url: 
      #nginx.ingress.kubernetes.io/force-ssl-redirect: "true"

    hosts:
      - host: 
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  grafana:
    endpoint: 
  
  envFromSecret: 

mysql:
  enabled: true
  fullNameOverride: "devlake-mysql"
  pullPolicy: IfNotPresent
  image:
    registry: docker.io
    repository: bitnami/mysql
    tag: 8.0.29-debian-10-r15
  
  architecture: standalone

  auth:
    database: lake
    existingSecret: 
    username: merico

    
    
