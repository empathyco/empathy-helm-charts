apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "helm.name" . }}
  labels: {{- include "helm.labels" . | nindent 4 }}
data:
  app-config.yaml: |
    app:
      title: {{ .Values.config.app.title }}
      baseUrl: {{ .Values.config.app.baseUrl }}
      support: {{ toYaml .Values.config.app.support | nindent 8 }}
    {{- if .Values.config.kubernetes }}
    kubernetes:
      serviceLocatorMethod:
        type: {{ .Values.config.kubernetes.serviceLocatorMethod }}
      clusterLocatorMethods:
          {{-  toYaml  .Values.config.kubernetes.clusterLocatorMethods | nindent 8 -}}
    {{- end }}
    {{- if .Values.config.lighthouse }}
    lighthouse:
      baseUrl: http://{{ include "helm.fullname" . }}.backstage.svc.cluster.local:{{ .Values.lighthouse.service.port }}
    {{- end }}
    organization:
      name: {{ .Values.config.organization.name }}
    backend:
      baseUrl: {{ .Values.config.backend.baseUrl }}
      listen:
        port: {{ .Values.config.backend.listen.port }}
      csp:
        connect-src:
        {{- range .Values.config.backend.csp.connectsrc }}
        - {{.}}
        {{- end }}
        img-src:
        {{- range .Values.config.backend.csp.imgsrc }}
        - {{.}}
        {{- end }}
        frame-src:
        {{- range .Values.config.backend.csp.framesrc }}
        - {{.}}
        {{- end }}
      cors:
        origin: {{ .Values.config.backend.cors.origin }}
        methods:
        {{- range .Values.config.backend.cors.methods }}
        - {{.}}
        {{- end }}
        credentials: {{ .Values.config.backend.cors.credentials }}
      database:
        client: {{ .Values.config.backend.database.client }}
        connection:
          host: ${APP_CONFIG_backend_database_connection_host}
          port: {{ .Values.config.backend.database.connection.port }}
      cache:
        store: {{ .Values.config.backend.cache.store }}
    integrations: {{ toYaml .Values.config.integrations | nindent 6 }}
    proxy:
      {{ range $element := .Values.config.proxy }}
      {{ $element.endpoint }}:{{ toYaml $element.config | nindent 8 -}}
      {{ end }}
    {{- toYaml .Values.config.redirectUrls | nindent 4 }}
    techdocs:
      builder: {{ .Values.config.techdocs.builder }}
      generator:
        runIn: {{ .Values.config.techdocs.generator.runIn }}
      publisher:
        type: {{ .Values.config.techdocs.publisher.type }} # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.
        awsS3:
          bucketName: '{{ .Values.config.techdocs.publisher.awsS3.bucketName }}'
    auth: {{ toYaml .Values.config.auth | nindent 6 }}
    scaffolder:
      defaultAuthor:
        name: {{ .Values.config.scaffolder.defaultAuthor.name}}
        email: {{ .Values.config.scaffolder.defaultAuthor.email }}
    catalog:
      rules:
        - allow:
          {{- range .Values.config.catalog.rules.allow }}
          - {{.}}
          {{- end }}
      locations:
        {{- range $index, $element := .Values.config.catalog.locations }}
        - type: {{ $element.type | quote }}
          target: {{ $element.target | quote }}
          {{- if $element.rules }}
          rules:
            - allow:
              {{- range $element.rules.allow }}
              - {{.}}
              {{- end }}
          {{- end }}
        {{- end }}
    global:
      postgresql:
        postgresqlUsername: {{ .Values.global.postgresql.postgresqlUsername }}
        postgresqlPassword: {{ .Values.global.postgresql.postgresqlPassword }}
