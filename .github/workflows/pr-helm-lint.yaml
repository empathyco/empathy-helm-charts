name: Helm Lint

on:
  pull_request:

jobs:
  helm-lint:
    runs-on: 'ubuntu-latest'
    steps:
      - name: "Checkout current PR"
        uses: actions/checkout@v2

      - name: "Checkout main branch"
        uses: actions/checkout@v2
        with:
          ref: main
          path: main

      - name: "Get Helm Charts changed"
        uses: jitterbit/get-changed-files@v1
        id: updated_files
        with:
          format: csv
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: "Dump updated Helm Charts folders and validate semantic versioning"
        run: |
          echo "${{ steps.updated_files.outputs.all }}" | tr "," "\n" | awk -F\/ '/\// && !/^\./ {print $2}' | sort | uniq > changed_charts
          while read chart; do
            # Get Chart version in the current PR branch
            version=$(awk -F\: '/^version:/ {print $(NF)}' charts/${chart}/Chart.yaml|tr -d " ")

            # Get Chart version in main branch
            version_main=$(awk -F\: '/^version:/ {print $(NF)}' main/charts/${chart}/Chart.yaml|tr -d " ")

            # Calculate valid next versions
            major_main=$(echo ${version_main}| awk -F. '{print $1}')
            major_main_next=$(echo ${major_main} + 1 | bc).0.0
            minor_main=$(echo ${version_main}| awk -F. '{print $2}')
            minor_main_next=${major_main}.$(echo ${minor_main} + 1 | bc).0
            patch_main=$(echo ${version_main}| awk -F. '{print $3}')
            patch_main_next=${major_main}.${minor_main}.$(echo ${patch_main} + 1 | bc)

            # Chart version in current PR must be one of the valid versions
            set +e
            echo ${version} | grep -w "${major_main_next} ${minor_main_next} ${patch_main_next}"
            rc=$?
            set -e

            if [ ${rc} -ne 0 ]; then
              echo "Version specified in charts/${chart}/Chart.yaml does not follow semantic versioning."
              echo "It must be a valid next semantic version. For this case, valid semantic versions are:"
              echo ""
              echo "- ${major_main_next}"
              echo "- ${minor_main_next}"
              echo "- ${patch_main_next}"
              exit 1
            fi
          done <<EOF
            $(cat changed_charts)
          EOF

      - name: "Helm Lint"
        run: |
          while read chart; do
            if [ -d ${chart} ]; then
              helm lint "./charts/${chart}/" || false
            else
              echo "Skipping charts/${chart} as it seems it has been deleted."
            fi
          done <<EOF
            $(cat changed_charts)
          EOF
